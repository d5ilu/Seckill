<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<!-- 配置整合mybatis -->
	<!-- 1.配置数据库相关参数 通过${url}调用 -->
	<context:property-placeholder
		location="classpath:jdbc.properties" />
	<!-- 2配置数据源 -->
	<bean id="dataSource"
		class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${driver}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${jdbc_user}"></property>
		<property name="password" value="${password}"></property>

		<property name="maxActive" value="30"></property>
		<property name="minIdle" value="10"></property>
		<property name="initialSize" value="1"></property>
		<property name="maxWait" value="10000"></property>
		<property name="testOnBorrow" value="true"></property>
	</bean>
	<!-- 3.配置SqlSessionFactory -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- mybatis全局配置文件 -->
		<property name="configLocation"
			value="classpath:mybatis-config.xml"></property>
		<!-- 扫描entity包 -->
		<property name="typeAliasesPackage"
			value="org.seckill.entity"></property>
		<!-- 扫描mapper -->
		<property name="mapperLocations"
			value="classpath:mapper/*.xml"></property>
	</bean>
	<!-- 4扫描Dao接口包，注入到容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName"
			value="sqlSessionFactory"></property>
		<property name="basePackage" value="org.seckill.dao"></property>
	</bean>
	<bean id="redisDao" class="org.seckill.dao.RedisDao">
	<constructor-arg name="ip" value="127.0.0.1"></constructor-arg>
	<constructor-arg name="port" value="6379"></constructor-arg>
	</bean>
</beans>
